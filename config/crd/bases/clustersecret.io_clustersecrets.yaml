---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: clustersecrets.clustersecret.io
spec:
  group: clustersecret.io
  names:
    kind: ClusterSecret
    listKind: ClusterSecretList
    plural: clustersecrets
    shortNames:
    - csec
    singular: clustersecret
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - description: Secret Type
      jsonPath: .type
      name: Type
      type: string
    - description: Timestamp of when the ClusterSecret resource was created
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: 'The clustersecret.io/v1 apiVersion is no longer supported.
      Please migrate over to clustersecret.io/v2: https://clustersecret.io/update/v1-to-v2/'
    name: v1
    schema:
      openAPIV3Schema:
        description: ClusterSecret is the Schema for the clustersecrets API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          avoidNamespaces:
            description: |-
              AvoidNamespaces is a list of RegEx patterns on namespaces to skip
              replication of the Kubernetes Secret to.
              These patterns has higher precedence than the MatchNamespaces patterns.
            example:
            - - kube-.*
              - default
            items:
              description: NamespaceRegex defines a regular expression pattern used
                to filter namespaces.
              format: regex
              type: string
            type: array
            x-kubernetes-list-type: atomic
          data:
            description: |-
              Data contains the secret data. Each key must consist of alphanumeric
              characters, '-', '_' or '.'. The serialized form of the secret data is a
              base64 encoded string, representing the arbitrary (possibly non-string)
              data value here. Described in https://tools.ietf.org/html/rfc4648#section-4
            nullable: true
            x-kubernetes-preserve-unknown-fields: true
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          matchNamespace:
            description: |-
              MatchNamespaces is a list of RegEx patterns on namespaces to replicate
              the Kubernetes Secret to.
            example:
            - - prod-.*
            items:
              description: NamespaceRegex defines a regular expression pattern used
                to filter namespaces.
              format: regex
              type: string
            type: array
            x-kubernetes-list-type: atomic
          metadata:
            type: object
          status:
            description: ClusterSecretStatus defines the observed state of ClusterSecret
            properties:
              create_fn:
                properties:
                  syncedns:
                    items:
                      type: string
                    type: array
                type: object
              kopf:
                properties:
                  progress:
                    type: object
                type: object
            type: object
          stringData:
            additionalProperties:
              type: string
            description: |-
              StringData allows specifying non-binary secret data in string form.
              It is provided as a write-only input field for convenience.
              All keys and values are merged into the data field on write, overwriting any existing values.
              The stringData field is never output when reading from the API.
            nullable: true
            type: object
          type:
            default: Opaque
            description: |-
              Type of the Kubernetes Secret.
              Used to facilitate programmatic handling of secret data.
              More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types
            example:
            - Opaque
            - kubernetes.io/dockerconfigjson
            - kubernetes.io/dockercfg
            - kubernetes.io/basic-auth
            - kubernetes.io/ssh-auth
            - kubernetes.io/tls
            - kubernetes.io/service-account-token
            - bootstrap.kubernetes.io/token
            type: string
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Number of ready secrets vs how many secrets it attempts to create
      jsonPath: .status.readySecretsRatio
      name: Ready
      type: string
    - description: Secret Type
      jsonPath: .spec.template.type
      name: Type
      type: string
    - description: Number of data fields in the secret
      format: int32
      jsonPath: .status.dataCount
      name: Data
      type: integer
    - description: Timestamp of when the ClusterSecret resource was created
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v2
    schema:
      openAPIV3Schema:
        description: ClusterSecret is the Schema for the clustersecrets API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ClusterSecretSpec defines the desired state of ClusterSecret
            properties:
              dataFrom:
                description: |-
                  DataFrom sets a list of sources where the data can be created from.
                  This data is loaded first, and is overridden by .spec.template.data.* and .spec.template.dataValueFrom.* fields.
                items:
                  description: |-
                    DataFrom defines a source to read additional secret data from,
                    similar to a container's .envFrom field.
                  properties:
                    secretRef:
                      description: SecretRef from where to load additional data from.
                      properties:
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                nullable: true
                type: array
              dataValueFrom:
                additionalProperties:
                  description: |-
                    DataValueFrom defines a source to read a specifc secret data field/key from,
                    similar to a container's .env[*].valueFrom field.
                  properties:
                    secretKeyRef:
                      description: SecretKeyRef from where to load additional data
                        field from.
                      properties:
                        key:
                          description: Key is which Secret key in its data to reference.
                          type: string
                        name:
                          description: Name is unique within a namespace to reference
                            a secret resource.
                          type: string
                        namespace:
                          description: Namespace defines the space within which the
                            secret name must be unique.
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                  type: object
                description: |-
                  DataValueFrom sets a map of data keys and where to load their data from.
                  This data is loaded after .spec.template.dataFrom, but is overriden by the .spec.template.data.* fields.
                nullable: true
                type: object
              namespaceSelectorTerm:
                description: |-
                  NamespaceSelectorTerms defines the list of namespace selection
                  criteria for where to place the Secrets.


                    - If the affinity requirements specified by this field are not met,
                      the secret will not be added to the namespace.
                    - If the affinity requirements specified by this field cease to be met
                      at some point during execution (e.g. due to an update),
                      the operator will try to eventually evict the secret
                      from its namespace.


                  The terms in this list are ORed together.
                items:
                  description: |-
                    A null or empty namespace selector term matches no objects.
                    The requirements in matchExpressions and matchFields are ANDed together.
                  properties:
                    matchExpressions:
                      description: |-
                        A list of namespace selector requirements by namespace's labels.
                        The requirements in this list are ANDed together.
                      items:
                        description: |-
                          A namespace selector requirement is a selector that contains values, a key,
                          and an operator that relates the key and values.
                        properties:
                          key:
                            description: The label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              Represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, InRegex, NotInRegex, Exists, DoesNotExist, Gt, and Lt.
                            enum:
                            - In
                            - NotIn
                            - InRegex
                            - NotInRegex
                            - Exists
                            - DoesNotExist
                            - Gt
                            - Lt
                            type: string
                          values:
                            description: |-
                              An array of string values.


                                - If the operator is In or NotIn,
                                  the values array must be non-empty.
                                - If the operator is InRegex or NotInRegex,
                                  the values array must be non-empty,
                                  which will be interpreted as Go Regex patterns.
                                  (https://pkg.go.dev/regexp/syntax)
                                - If the operator is Exists or DoesNotExist,
                                  the values array must be empty.
                                - If the operator is Gt or Lt,
                                  the values array must have a single element,
                                  which will be interpreted as an integer.


                              This array is replaced during a strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                    matchFields:
                      description: |-
                        A list of namespace selector requirements by namespace's fields.
                        The requirements in this list are ANDed together.
                      items:
                        description: |-
                          A namespace selector requirement is a selector that contains values, a key,
                          and an operator that relates the key and values.
                        properties:
                          key:
                            description: The label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              Represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, InRegex, NotInRegex, Exists, DoesNotExist, Gt, and Lt.
                            enum:
                            - In
                            - NotIn
                            - InRegex
                            - NotInRegex
                            - Exists
                            - DoesNotExist
                            - Gt
                            - Lt
                            type: string
                          values:
                            description: |-
                              An array of string values.


                                - If the operator is In or NotIn,
                                  the values array must be non-empty.
                                - If the operator is InRegex or NotInRegex,
                                  the values array must be non-empty,
                                  which will be interpreted as Go Regex patterns.
                                  (https://pkg.go.dev/regexp/syntax)
                                - If the operator is Exists or DoesNotExist,
                                  the values array must be empty.
                                - If the operator is Gt or Lt,
                                  the values array must have a single element,
                                  which will be interpreted as an integer.


                              This array is replaced during a strategic merge patch.
                            items:
                              type: string
                            type: array
                        required:
                        - key
                        - operator
                        type: object
                      type: array
                  type: object
                  x-kubernetes-map-type: atomic
                type: array
              template:
                description: Template of the Kubernetes Secret to replicate across
                  the namespaces.
                properties:
                  data:
                    additionalProperties:
                      format: byte
                      type: string
                    description: |-
                      Data contains the secret data. Each key must consist of alphanumeric
                      characters, '-', '_' or '.'. The serialized form of the secret data is a
                      base64 encoded string, representing the arbitrary (possibly non-string)
                      data value here. Described in https://tools.ietf.org/html/rfc4648#section-4
                    nullable: true
                    type: object
                  metadata:
                    description: Metadata of the Kubernetes Secret. Only supports
                      a subset of all metadata fields.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations of the Kubernetes Secret to create.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels of the Kubernetes Secret to create.
                        type: object
                      name:
                        description: |-
                          Name of the Kubernetes Secret to create.
                          By default uses the name of the ClusterSecret resource.
                        type: string
                    type: object
                  stringData:
                    additionalProperties:
                      type: string
                    description: |-
                      StringData allows specifying non-binary secret data in string form.
                      It is provided as a write-only input field for convenience.
                      All keys and values are merged into the data field on write, overwriting any existing values.
                      The stringData field is never output when reading from the API.
                    nullable: true
                    type: object
                  type:
                    default: Opaque
                    description: |-
                      Type of the Kubernetes Secret.
                      Used to facilitate programmatic handling of secret data.
                      More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types
                    example:
                    - Opaque
                    - kubernetes.io/dockerconfigjson
                    - kubernetes.io/dockercfg
                    - kubernetes.io/basic-auth
                    - kubernetes.io/ssh-auth
                    - kubernetes.io/tls
                    - kubernetes.io/service-account-token
                    - bootstrap.kubernetes.io/token
                    type: string
                type: object
            required:
            - template
            type: object
          status:
            description: ClusterSecretStatus defines the observed state of ClusterSecret
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              dataCount:
                description: DataCount is the number of fields in the data.
                format: int32
                type: integer
              matchingNamespaces:
                description: |-
                  MatchingNamespaces is a list of namespaces the secret will try replicate to,
                  based on the current namespaces in the cluster and the ClusterSecret's
                  filtering.
                items:
                  type: string
                type: array
              matchingNamespacesCount:
                description: |-
                  MatchingNamespacesCount is the target number of namespaces the secret will try replicate to,
                  based on the current namespaces in the cluster and the ClusterSecret's
                  filtering.
                format: int32
                type: integer
              readySecretsCount:
                description: ReadySecretsCount is the number of secrets that currently
                  exist.
                format: int32
                type: integer
              readySecretsRatio:
                description: |-
                  ReadySecretsRatio is a string like "3/3" or "0/3" that shows how many
                  secrets are ready (the first number) out of how many secrets this ClusterSecret
                  aims to have (the second number).
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
