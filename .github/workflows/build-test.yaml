# Docker build images on tag
name: Test Builds Images
on: [pull_request]

env:
  IMAGE_TAGS: ${{  github.ref_name }}
  REGISTRY_USER: clustersecret
  IMAGE_REGISTRY: quay.io
  IMAGE_NAMESPACE : clustersecret

jobs:
  build-amd64:
    name: Build amd64
    runs-on: ubuntu-24.04
    # strategy:
    #   fail-fast: false
      # matrix:
        # install_latest: [ true, false ] #ubuntu-20.04 has a good enough podman.
    steps:
      # Checkout push-to-registry action github repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v2

      # - name: Install latest podman
      #   if: matrix.install_latest
      #   run: |
      #     bash .github/install_latest_podman.sh

      - name: Install qemu dependency
        # we need quemu-user-static for builds other archs with buildah
        # https://github.com/containers/podman/issues/13924#issuecomment-1103434554
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Build amd64
        id: build_image386
        uses: redhat-actions/buildah-build@main
        with:
          image: ${{ env.IMAGE_NAMESPACE }}
          tags: ${{ env.IMAGE_TAGS }}
          platforms: linux/amd64
          containerfiles: |
            ./Dockerfile.gh

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push-to-quay.outputs) }}"


  build-386:
    name: Build 386
    runs-on: ubuntu-24.04
    # strategy:
    #   fail-fast: false
      # matrix:
        # install_latest: [ true, false ] #ubuntu-20.04 has a good enough podman.
    steps:
      # Checkout push-to-registry action github repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v2

      # - name: Install latest podman
      #   if: matrix.install_latest
      #   run: |
      #     bash .github/install_latest_podman.sh

      - name: Install qemu dependency
        # we need quemu-user-static for builds other archs with buildah
        # https://github.com/containers/podman/issues/13924#issuecomment-1103434554
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Build alt Image 386
        id: build_image386
        uses: redhat-actions/buildah-build@main
        with:
          image: ${{ env.IMAGE_NAMESPACE }}
          tags: ${{ env.IMAGE_TAGS }}
          platforms: linux/386
          containerfiles: |
            ./Dockerfile.gh

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push-to-quay.outputs) }}"


  build-s390:
    name: Builds 390
    runs-on: ubuntu-24.04
    # strategy:
    #   fail-fast: false
      # matrix:
        # install_latest: [ true, false ] #ubuntu-20.04 has a good enough podman.
    steps:
      # Checkout push-to-registry action github repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v2

      # - name: Install latest podman
      #   if: matrix.install_latest
      #   run: |
      #     bash .github/install_latest_podman.sh

      - name: Install qemu dependency
        # we need quemu-user-static for builds other archs with buildah
        # https://github.com/containers/podman/issues/13924#issuecomment-1103434554
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
          sudo apt-get install -y rustc

      - name: Build alt Image s390
        id: build_image390
        uses: redhat-actions/buildah-build@main
        with:
          image: ${{ env.IMAGE_NAMESPACE }}
          tags: ${{ env.IMAGE_TAGS }}
          platforms: linux/s390x
          containerfiles: |
            ./Dockerfile.gh

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push-to-quay.outputs) }}"


  build-armv8:
    name: Build armv8
    runs-on: ubuntu-24.04
    # strategy:
    #   fail-fast: false
      # matrix:
        # install_latest: [ true, false ] #ubuntu-20.04 has a good enough podman.
    steps:
      # Checkout push-to-registry action github repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v2

      # - name: Install latest podman
      #   if: matrix.install_latest
      #   run: |
      #     bash .github/install_latest_podman.sh

      - name: Install qemu dependency
        # we need quemu-user-static for builds other archs with buildah
        # https://github.com/containers/podman/issues/13924#issuecomment-1103434554
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
          sudo apt-get install -y rustc

      - name: Build alt Image armv8
        id: build_alt_imagev8
        uses: redhat-actions/buildah-build@main
        with:
          image: ${{ env.IMAGE_NAMESPACE }}
          tags: ${{ env.IMAGE_TAGS }}
          platforms: linux/arm64/v8
          containerfiles: |
            ./Dockerfile.gh

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push-to-quay.outputs) }}"

  build-armv7:
    name: Build armv7 #note it needs build essentials (uses docker-others)
    runs-on: ubuntu-24.04
    # strategy:
    #   fail-fast: false
      # matrix:
        # install_latest: [ true, false ] #ubuntu-20.04 has a good enough podman.
    steps:
      # Checkout push-to-registry action github repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v2

      # - name: Install latest podman
      #   if: matrix.install_latest
      #   run: |
      #     bash .github/install_latest_podman.sh

      - name: Install qemu dependency
        # we need quemu-user-static for builds other archs with buildah
        # https://github.com/containers/podman/issues/13924#issuecomment-1103434554
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
          sudo apt-get install -y rustc

      - name: Build alt Image armv7
        id: build_alt_imagev7
        uses: redhat-actions/buildah-build@main
        with:
          image: ${{ env.IMAGE_NAMESPACE }}
          tags: ${{ env.IMAGE_TAGS }}
          platforms: linux/arm/v7
          containerfiles: |
            ./Dockerfile-others.gh

      - name: Echo outputs
        run: |
          echo "${{ toJSON(steps.push-to-quay.outputs) }}"
